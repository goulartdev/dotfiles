export XDG_CONFIG_HOME="${HOME}/.config"
export XDG_CACHE_HOME="${HOME}/.cache"
export XDG_DATA_HOME="${HOME}/.local/share"
export XDG_STATE_HOME="${HOME}/.local/state"
export XDG_RUNTIME_DIR="/run/user/$(id -u)"

pathprepend ${HOME}/.local/bin PATH

export NAME='Djonathan Goulart'
export EMAIL='djonathan.goulart@gmail.com'

export EDITOR=nvim
export VISUAL=nvim
export PAGER=less

export RANDFILE="${XDG_DATA_HOME}/openssl/rnd"
export GNUPGHOME="${XDG_DATA_HOME}/gnupg"
export CUDA_CACHE_PATH="${XDG_CACHE_HOME}/nv"
export WGETRC="${XDG_CONFIG_HOME}/wget/wgetrc"

## WSL
export IS_WSL=$([[ -f "/proc/sys/fs/binfmt_misc/WSLInterop" ]] && echo 1 || echo 0)

## ASDF
export ASDF_DIR="${XDG_DATA_HOME}/asdf"
export ASDF_DATA_DIR="${XDG_DATA_HOME}/asdf"
export ASDF_CONFIG_FILE="${XDG_CONFIG_HOME}/asdf/asdfrc"

if [[ -f "$ASDF_DIR/asdf.sh" ]]; then
  source "$ASDF_DIR/asdf.sh"
fi

## AWS
export AWS_SHARED_CREDENTIALS_FILE="${XDG_CONFIG_HOME}/aws/credentials"
export AWS_CONFIG_FILE="${XDG_CONFIG_HOME}/aws/config"

## AZURE
export AZURE_CONFIG_DIR="${XDG_DATA_HOME}/azure"

## CARGO
export CARGO_HOME="${XDG_DATA_HOME}/cargo"

## CONDA
export CONDA_ENVS_DIRS="${XDG_DATA_HOME}/conda/envs"
export CONDA_PKGS_DIRS="${XDG_CACHE_HOME}/conda/pkgs"

## DOCKER
export DOCKER_CONFIG="${XDG_CONFIG_HOME}/docker"
export DOCKER_BUILDKIT=1
export COMPOSE_DOCKER_CLI_BUILD=1

## DOTNET
export DOTNET_CLI_HOME="${XDG_DATA_HOME}/dotnet"

## GIT
export GIT_AUTHOR_NAME=$NAME
export GIT_AUTHOR_EMAIL=$EMAIL
export GIT_COMMITTER_NAME=$NAME
export GIT_COMMITTER_EMAIL=$EMAIL

## RIPGREP
export RIPGREP_CONFIG_PATH="${XDG_CONFIG_HOME}/ripgrep/config"

## NODE / NPM
export NODE_REPL_HISTORY="${XDG_CACHE_HOME}/node/node_repl_history"
export NPM_CONFIG_USERCONFIG="${XDG_CONFIG_HOME}/npm/npmrc"

## PSQL
export PSQLRC="$XDG_CONFIG_HOME/psql/psqlrc"
export PSQL_HISTORY="$XDG_STATE_HOME/psql/psql_history"
export PGPASSFILE="$XDG_CONFIG_HOME/psql/pgpass"
export PGSERVICEFILE="$XDG_CONFIG_HOME/psql/pg_service.conf"

## PYTHON
export PYTHONSTARTUP="${XDG_CONFIG_HOME}/python/python_history.py"
export PYLINTHOME="${XDG_CACHE_HOME}/pylint"
export PYTHON_EGG_CACHE="${XDG_CACHE_HOME}/python-eggs"
export PIPENV_DONT_LOAD_ENV=0
export PIPENV_VENV_IN_PROJECT=1

## VSCODE 
# devcontainer UID GID
export UID=$UID
export GID=$GID

# devcontainer ssh forwarding
if [ -z "$SSH_AUTH_SOCK" ]; then
   # Check for a currently running instance of the agent
   RUNNING_AGENT="`ps -ax | grep 'ssh-agent -s' | grep -v grep | wc -l | tr -d '[:space:]'`"
   if [ "$RUNNING_AGENT" = "0" ]; then
        # Launch a new instance of the agent
        ssh-agent -s &> $HOME/.ssh/ssh-agent
   fi
   eval `cat $HOME/.ssh/ssh-agent`
fi
